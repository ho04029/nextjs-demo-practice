{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Udemy-react\\\\nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\"; //9. 프롭스 설정해주기\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      img: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Udemy-react/nextjs/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","Fragment","MeetupDetails","props","meetupData","title","image","address","description"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AACE,MAAA,GAAG,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADxB;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAdQN,a;;AAiFT,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { Fragment } from \"react\";\r\n\r\n//9. 프롭스 설정해주기\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n      </Head>\r\n      <MeetupDetail\r\n        img={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //2. new-meetup작업할 때 사용했던 것을 붙여넣기\r\n  const clinet = await MongoClient.connect(\r\n    \"mongodb+srv://ho04029:4Fils6gxzqhCs40l@boilerplate.xzicw.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = clinet.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //3. find호출\r\n  //첫번째 인자로 특정 필드값을 입력하여 필터 기준을 정의할 수 있음\r\n  //두번째 인자에는 찾아진 모든 문서에서 추출되어야할 필드를 정의\r\n  //여기서는 id에만 관심이 있으므로 _id입력\r\n  //1은 _id만 포함하고 다른 필드값은 포함하지 않는다는 의미\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  //5. 닫아주기\r\n  clinet.close();\r\n  //4. 리턴값 매핑\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  //6.동적으로 사용하기위해 이쪽에도 몽고디비 사용\r\n  const clinet = await MongoClient.connect(\r\n    \"mongodb+srv://ho04029:4Fils6gxzqhCs40l@boilerplate.xzicw.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = clinet.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //7.findOne메소드 사용\r\n  //findOne에 어떻게 필터링하고 어떻게 문서를 검색하는지\r\n  //정의하는 객체를 전달해야함\r\n  //여기서는 _id가 meetupId와 같은 것을 찾음\r\n  //find와 마찬가지로 프로미스를 반환하므로 await붙여줌\r\n  //11.meetupId를 ObjectId로 감싸줌\r\n  //이렇게 하면 String인 meetupId를 Object로 변환시켜주시때문에\r\n  //_id와 비교가 가능해짐\r\n  const selectMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  clinet.close();\r\n\r\n  //8. 리턴값 변경\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectMeetup._id.toString(),\r\n        title: selectMeetup.title,\r\n        address: selectMeetup.address,\r\n        image: selectMeetup.image,\r\n        description: selectMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}