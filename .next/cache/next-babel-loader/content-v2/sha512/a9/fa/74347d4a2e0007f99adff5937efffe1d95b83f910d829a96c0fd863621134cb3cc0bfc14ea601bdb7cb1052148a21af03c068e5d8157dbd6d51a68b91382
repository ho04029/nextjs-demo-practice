{"ast":null,"code":"import _regeneratorRuntime from \"C:/Udemy-react/nextjs/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/Udemy-react/nextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Udemy-react\\\\nextjs\\\\pages\\\\new-meetup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\n\nfunction NewMeetupPage() {\n  _s();\n\n  //10. 다른 페이지로의 이동을 위해 라우터 호출\n  var router = useRouter();\n\n  function addMeetupHandler(_x) {\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  function _addMeetupHandler() {\n    _addMeetupHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/new-meetup\", {\n                method: \"POST\",\n                body: JSON.stringify(enteredData),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n\n_s(NewMeetupPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = NewMeetupPage;\nexport default NewMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetupPage\");","map":{"version":3,"sources":["C:/Udemy-react/nextjs/pages/new-meetup/index.js"],"names":["useRouter","NewMeetupForm","NewMeetupPage","router","addMeetupHandler","enteredData","fetch","method","body","JSON","stringify","headers","response","json","data","console","log"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB;AACA,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAFuB,WAGRI,gBAHQ;AAAA;AAAA;;AAAA;AAAA,iFAGvB,iBAAgCC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAUyBC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAFwC;AAG9CM,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAHqC,eAApB,CAV9B;;AAAA;AAUQC,cAAAA,QAVR;AAAA;AAAA,qBAmBqBA,QAAQ,CAACC,IAAT,EAnBrB;;AAAA;AAmBQC,cAAAA,IAnBR;AAqBEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHuB;AAAA;AAAA;;AA2BvB,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEV;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA5BQF,a;UAEQF,S;;;KAFRE,a;AA6BT,eAAeA,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\n\r\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\r\n\r\nfunction NewMeetupPage() {\r\n  //10. 다른 페이지로의 이동을 위해 라우터 호출\r\n  const router = useRouter();\r\n  async function addMeetupHandler(enteredData) {\r\n    //8.api경로로 request보내기\r\n    //fetch안에 request를 보낼 url을 입력\r\n    //여기서는 내부 api를 사용하고 있으므로 이 페이지를 제공하는데 사용되는 같은 서버에 의해 관리됨\r\n    //따라서 같은 서버에 requst를 보내지만\r\n    //해당 서버의 다른 경로에도 보낼 수 있는 절대 경로 생성가능\r\n    //경로로 /api를 입력하고 파일 확장자 없이 파일이름인 /new-meetup입력\r\n    //꼭 자바스크립트 파일(현재 api폴더에 있는 파일)과 같은 이름으로 입력\r\n    //이렇게 하면 api폴더에 잇는 new-meetup.js파일로 request가 전송\r\n    //전송되면 new-meetup.js의 function이 트리거됨\r\n    const response = await fetch(\"/api/new-meetup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(enteredData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    //9.fetch로부터 응답얻기\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n  }\r\n\r\n  return <NewMeetupForm onAddMeetup={addMeetupHandler} />;\r\n}\r\nexport default NewMeetupPage;\r\n"]},"metadata":{},"sourceType":"module"}