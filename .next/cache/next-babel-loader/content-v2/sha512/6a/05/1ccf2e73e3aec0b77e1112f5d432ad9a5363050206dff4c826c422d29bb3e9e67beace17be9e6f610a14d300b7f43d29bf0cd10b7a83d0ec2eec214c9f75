{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Udemy-react\\\\nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\n//1. 몽고디비임포트\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Street\",\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  //2. new-meetup작업할 때 사용했던 것을 붙여넣기\n  const clinet = await MongoClient.connect(\"mongodb+srv://ho04029:4Fils6gxzqhCs40l@boilerplate.xzicw.mongodb.net/?retryWrites=true&w=majority\");\n  const db = clinet.db();\n  const meetupsCollection = db.collection(\"meetups\"); //3. find호출\n  //첫번째 인자로 특정 필드값을 입력하여 필터 기준을 정의할 수 있음\n  //두번째 인자에는 찾아진 모든 문서에서 추출되어야할 필드를 정의\n  //여기서는 id에만 관심이 있으므로 _id입력\n  //1은 _id만 포함하고 다른 필드값은 포함하지 않는다는 의미\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); //5. 닫아주기\n\n  clinet.close(); //4. 리턴값 매핑\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; //6.동적으로 사용하기위해 이쪽에도 몽고디비 사용\n\n  const clinet = await MongoClient.connect(\"mongodb+srv://ho04029:4Fils6gxzqhCs40l@boilerplate.xzicw.mongodb.net/?retryWrites=true&w=majority\");\n  const db = clinet.db();\n  const meetupsCollection = db.collection(\"meetups\"); //7.findOne메소드 사용\n  //findOne에 어떻게 필터링하고 어떻게 문서를 검색하는지\n  //정의하는 객체를 전달해야함\n  //여기서는 _id가 meetupId와 같은 것을 찾음\n  //find와 마찬가지로 프로미스를 반환하므로 await붙여줌\n\n  const selectMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  clinet.close(); //8. 리턴값 변경\n\n  return {\n    props: {\n      meetupData: selectMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Udemy-react/nextjs/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","meetupData","description","getStaticPaths","clinet","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectMeetup","findOne"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAC,wHADN;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,WAAW,EAAEA,KAAK,CAACC,UAAN,CAAiBC;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAPqC,CASrC;AACA;AACA;AACA;AACA;;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB,CAdqC,CAerC;;AACAR,EAAAA,MAAM,CAACS,KAAP,GAhBqC,CAiBrC;;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD4C,CAG5C;;AACA,QAAMf,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAT4C,CAW5C;AACA;AACA;AACA;AACA;;AACA,QAAMe,YAAY,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA3B;AAEAf,EAAAA,MAAM,CAACS,KAAP,GAlB4C,CAoB5C;;AACA,SAAO;AACLb,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEsB;AADP;AADF,GAAP;AAKD;AAED,eAAexB,aAAf","sourcesContent":["//1. 몽고디비임포트\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      img=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"First Meetup\"\r\n      address=\"Street\"\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //2. new-meetup작업할 때 사용했던 것을 붙여넣기\r\n  const clinet = await MongoClient.connect(\r\n    \"mongodb+srv://ho04029:4Fils6gxzqhCs40l@boilerplate.xzicw.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = clinet.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //3. find호출\r\n  //첫번째 인자로 특정 필드값을 입력하여 필터 기준을 정의할 수 있음\r\n  //두번째 인자에는 찾아진 모든 문서에서 추출되어야할 필드를 정의\r\n  //여기서는 id에만 관심이 있으므로 _id입력\r\n  //1은 _id만 포함하고 다른 필드값은 포함하지 않는다는 의미\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  //5. 닫아주기\r\n  clinet.close();\r\n  //4. 리턴값 매핑\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  //6.동적으로 사용하기위해 이쪽에도 몽고디비 사용\r\n  const clinet = await MongoClient.connect(\r\n    \"mongodb+srv://ho04029:4Fils6gxzqhCs40l@boilerplate.xzicw.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = clinet.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //7.findOne메소드 사용\r\n  //findOne에 어떻게 필터링하고 어떻게 문서를 검색하는지\r\n  //정의하는 객체를 전달해야함\r\n  //여기서는 _id가 meetupId와 같은 것을 찾음\r\n  //find와 마찬가지로 프로미스를 반환하므로 await붙여줌\r\n  const selectMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n  clinet.close();\r\n\r\n  //8. 리턴값 변경\r\n  return {\r\n    props: {\r\n      meetupData: selectMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}