{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Udemy-react\\\\nextjs\\\\pages\\\\new-meetup\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\n\nfunction NewMeetupPage() {\n  //10. 다른 페이지로의 이동을 위해 라우터 호출\n  const router = useRouter();\n\n  async function addMeetupHandler(enteredData) {\n    //8.api경로로 request보내기\n    //fetch안에 request를 보낼 url을 입력\n    //여기서는 내부 api를 사용하고 있으므로 이 페이지를 제공하는데 사용되는 같은 서버에 의해 관리됨\n    //따라서 같은 서버에 requst를 보내지만\n    //해당 서버의 다른 경로에도 보낼 수 있는 절대 경로 생성가능\n    //경로로 /api를 입력하고 파일 확장자 없이 파일이름인 /new-meetup입력\n    //꼭 자바스크립트 파일(현재 api폴더에 있는 파일)과 같은 이름으로 입력\n    //이렇게 하면 api폴더에 잇는 new-meetup.js파일로 request가 전송\n    //전송되면 new-meetup.js의 function이 트리거됨\n    const response = await fetch(\"/api/new-meetup\", {\n      method: \"POST\",\n      body: JSON.stringify(enteredData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }); //9.fetch로부터 응답얻기\n\n    const data = await response.json();\n    console.log(data);\n    router.push(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\nexport default NewMeetupPage;","map":{"version":3,"sources":["C:/Udemy-react/nextjs/pages/new-meetup/index.js"],"names":["useRouter","NewMeetupForm","NewMeetupPage","router","addMeetupHandler","enteredData","response","fetch","method","body","JSON","stringify","headers","data","json","console","log","push"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,aAAT,GAAyB;AACvB;AACA,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,iBAAeI,gBAAf,CAAgCC,WAAhC,EAA6C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAFwC;AAG9CO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHqC,KAApB,CAA5B,CAV2C,CAkB3C;;AACA,UAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAV,IAAAA,MAAM,CAACc,IAAP,CAAY,GAAZ;AACD;;AAED,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEb;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,eAAeF,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\n\r\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\r\n\r\nfunction NewMeetupPage() {\r\n  //10. 다른 페이지로의 이동을 위해 라우터 호출\r\n  const router = useRouter();\r\n  async function addMeetupHandler(enteredData) {\r\n    //8.api경로로 request보내기\r\n    //fetch안에 request를 보낼 url을 입력\r\n    //여기서는 내부 api를 사용하고 있으므로 이 페이지를 제공하는데 사용되는 같은 서버에 의해 관리됨\r\n    //따라서 같은 서버에 requst를 보내지만\r\n    //해당 서버의 다른 경로에도 보낼 수 있는 절대 경로 생성가능\r\n    //경로로 /api를 입력하고 파일 확장자 없이 파일이름인 /new-meetup입력\r\n    //꼭 자바스크립트 파일(현재 api폴더에 있는 파일)과 같은 이름으로 입력\r\n    //이렇게 하면 api폴더에 잇는 new-meetup.js파일로 request가 전송\r\n    //전송되면 new-meetup.js의 function이 트리거됨\r\n    const response = await fetch(\"/api/new-meetup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(enteredData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    //9.fetch로부터 응답얻기\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n\r\n    router.push(\"/\");\r\n  }\r\n\r\n  return <NewMeetupForm onAddMeetup={addMeetupHandler} />;\r\n}\r\nexport default NewMeetupPage;\r\n"]},"metadata":{},"sourceType":"module"}