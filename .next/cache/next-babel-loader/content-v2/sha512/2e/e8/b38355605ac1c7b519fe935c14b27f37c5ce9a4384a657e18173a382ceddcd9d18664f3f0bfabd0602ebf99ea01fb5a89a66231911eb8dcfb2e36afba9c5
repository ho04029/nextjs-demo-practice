{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Udemy-react\\\\nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\n//1. 몽고디비임포트\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Street\",\n    description: \"Something\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Udemy-react/nextjs/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AAAA;AAGA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAC,wHADN;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQA,a;;AAqDT,eAAeA,aAAf","sourcesContent":["//1. 몽고디비임포트\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      img=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n      title=\"First Meetup\"\r\n      address=\"Street\"\r\n      description=\"Something\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //2. new-meetup작업할 때 사용했던 것을 붙여넣기\r\n  const clinet = await MongoClient.connect(\r\n    \"mongodb+srv://ho04029:4Fils6gxzqhCs40l@boilerplate.xzicw.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = clinet.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  //3. find호출\r\n  //첫번째 인자로 특정 필드값을 입력하여 필터 기준을 정의할 수 있음\r\n  //두번째 인자에는 찾아진 모든 문서에서 추출되어야할 필드를 정의\r\n  //여기서는 id에만 관심이 있으므로 _id입력\r\n  //1은 _id만 포함하고 다른 필드값은 포함하지 않는다는 의미\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  //5. 닫아주기\r\n  clinet.close();\r\n  //4. 리턴값 매핑\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n        id: meetupId,\r\n        title: \"First Meetup\",\r\n        address: \"Street\",\r\n        description: \"Something\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}